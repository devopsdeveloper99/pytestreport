name: Code Coverage Check

on:
  push:
    branches: 
      - feature/**
      - main
      - develop
  pull_request:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  code-coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Build Docker image
      run: docker build -t test-runner .

    - name: Create mount directory
      run: mkdir -p mounted-output

    - name: Run Docker container
      run: |
        docker run --rm \
          -v ${{ github.workspace }}/mounted-output:/app/output \
          test-runner
    - name: Install xmllint
      run: sudo apt-get update && sudo apt-get install -y libxml2-utils
    - name: Read coverage %
      id: coverage_check
      run: |
        COV=$(xmllint --xpath "string(//coverage/@line-rate)" mounted-output/coverage.xml)
        COV_PCT=$(printf "%.0f\n" "$(echo "$COV * 100" | bc -l)")
        echo "Coverage: $COV_PCT%"
        echo "coverage=$COV_PCT" >> $GITHUB_OUTPUT
    - name: Generate HTML Coverage Report (Optional)
      if: always()  # Run even if previous steps fail
      run: |
        # If your test runner supports HTML reports (e.g., pytest-cov, lcov, etc.)
        # Example for Python pytest-cov:
        pip install pytest-cov
        export PYTHONPATH=$PYTHONPATH:$(pwd)
        pytest --cov=./ --cov-report=html:mounted-output/htmlcov
        # For other languages, adjust accordingly (e.g., `lcov` for JS/C++)        
    - name: Comment on PR with coverage result
      if: github.event_name == 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        COV_PCT: ${{ steps.coverage_check.outputs.coverage }}
      run: |
        PR_NUMBER=${{ github.event.pull_request.number }}
        REPO=${{ github.repository }}

        if [ "$COV_PCT" -ge 80 ]; then
          MESSAGE="‚úÖ **Code coverage is ${COV_PCT}%**, which is greater than the required threshold of 80%. You can safely merge this PR to the \`develop\` branch. üöÄ"
        else
          MESSAGE="‚ùå **Code coverage is ${COV_PCT}%**, which is below the required threshold of 80%. Please improve test coverage before merging. üîí"
        fi

        curl -s -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d "{\"body\": \"$MESSAGE\"}" \
          "https://api.github.com/repos/$REPO/issues/$PR_NUMBER/comments"

    - name: Fail if coverage is below threshold
      if: steps.coverage_check.outputs.coverage < 80
      run: |
        echo "‚ùå Code coverage is below 80%. Merge not allowed."
        exit 1

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: mounted-output/coverage.xml

    - name: Upload HTML coverage report (if generated)
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-html
        path: mounted-output/htmlcov/  # Adjust path if needed

  deploy-report:
    needs: code-coverage
    # if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download HTML coverage report artifact
      uses: actions/download-artifact@v4
      with:
        name: coverage-html
        path: coverage-html

    - name: Deploy HTML report to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: coverage-html

    - name: Output GitHub Pages link
      run: |
        echo "### üìä [View Coverage Report](https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/)" >> $GITHUB_STEP_SUMMARY
